{
    "swagger": "2.0",
    "info": {
        "description": "HTTP Microservice to make screenshot of a web page",
        "title": "Go Basilisk",
        "termsOfService": "https://opensource.org/licenses/MIT",
        "contact": {
            "name": "Bartosz Lenart",
            "email": "lenart.consulting@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "0.1.0"
    },
    "host": "localhost:8888",
    "basePath": "/",
    "paths": {
        "/screenshot/jpeg": {
            "post": {
                "description": "Makes full page screenshot to jpeg and returns jpeg buffer",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Scanners"
                ],
                "summary": "Makes wep page screenshot to jpeg",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Url schema to screenshot a web page from",
                        "name": "schema",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.URLRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": ""
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": ""
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": ""
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.URLRequestBody": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        }
    }
}